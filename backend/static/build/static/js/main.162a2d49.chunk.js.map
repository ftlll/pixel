{"version":3,"sources":["redux/toolTypes.js","redux/actions/actionTypes.js","redux/actions/action.js","utils/drawHandler.js","components/Cell.jsx","components/Grid.jsx","components/Canvas.jsx","components/Eraser.jsx","components/EyeDropper.jsx","components/PaletteCell.jsx","components/PaletteGrid.jsx","components/PaintBucket.jsx","components/UndoRedo.jsx","components/Popup.jsx","App.js","redux/reducers/canvasReducer.js","redux/reducers/selectedCanvasReducer.js","redux/reducers/drawingToolReducer.js","redux/reducers/paletteReducer.js","redux/reducers/reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["PENCIL","APPLY_PENCIL","tool","APPLY_ERASER","APPLY_PAINT_BUCKET","APPLY_EYE_DROPPER","init","type","applyTools","paletteColor","color","id","columns","rows","drawingTool","switchTool","selectPaletteColor","addCustomColor","undo","ActionCreators","redo","drawHandler","canvas","onMouseDown","ev","preventDefault","props","actionProps","grid","get","getCellActionProps","Cell","nextProps","this","cell","width","style","height","backgroundColor","className","React","Component","Grid","newProps","cells","map","i","key","Canvas","CanvasContainer","connect","state","present","palette","activeIndex","getIn","dispatch","cellProps","EraserContainer","usingEraser","switchEraser","aria-label","onClick","EyeDropperContainer","usingEyeDropper","switchEyeDropper","PlatteCell","active","PaletteGrid","PaletteCell","acive","PaletteGridContainer","toObject","bindActionCreators","PaintBucketContainer","usingPaintBucket","switchPaintBucket","UndoRedoContainer","actions","Popup","fileProcess","event","setState","file","target","files","fileUpload","console","log","visible","effect","onClickAway","close","onChange","App","popUpType","popUpShown","setPopUp","closePopUp","initCanvas","action","options","parseInt","List","push","Map","drawPixel","set","applyPencil","newGrid","applyPencilToGrid","isSameColor","colorA","colorB","getSameColorAdjCells","sameColorAdjCells","applyPaintBucket","currentId","adjCells","originalColor","cellQueue","length","shift","adjId","adjColor","indexOf","applyPaintBucketToGrid","applyEraser","drawingToolReducer","initPalette","disablePaletteColor","applyEyeDropper","index","size","searchForColor","location","merge","setIn","setInitialState","initialState","cellSize","generateDefaultState","pipeReducers","reducers","reduce","reducer","partialReducer","store","createStore","undoable","canvasReducer","selectedCanvasReducer","paletteReducer","filter","includeAction","debug","Boolean","window","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.162a2d49.chunk.js","sourcesContent":["export const PENCIL = 'PENCIL';\nexport const ERASER = 'ERASER';\nexport const PAINT_BUCKET = 'PAINT_BUCKET';\nexport const MOVE = 'MOVE';\nexport const EYE_DROPPER = 'EYE_DROPPER';\nexport const COLOR_PICKER = 'COLOR_PICKER';","import * as tool from '../toolTypes';\n\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_INIT_STATE = 'SET_INIT_STATE'; \nexport const APPLY_PENCIL = `APPLY_${tool.PENCIL}`;\nexport const APPLY_ERASER = `APPLY_${tool.ERASER}`;\nexport const APPLY_PAINT_BUCKET = `APPLY_${tool.PAINT_BUCKET}`;\nexport const APPLY_EYE_DROPPER = `APPLY_${tool.EYE_DROPPER}`;\nexport const APPLY_COLOR_PICKER = `APPLY_${tool.COLOR_PICKER}`;\nexport const SWITCH_TOOL = 'SWITCH_TOOL';\nexport const SELECT_PALETTE_COLOR = 'SELECT_PALETTE_COLOR';\nexport const ADD_CUSTOM_COLOR = 'ADD_CUSTOM_COLOR';\n\n","import * as type from './actionTypes';\nimport { ActionCreators } from 'redux-undo';\n\nexport function init() {\n    return {\n        type: type.SET_INIT_STATE\n    }\n}\n\nexport function applyTools({paletteColor = '', color , id, columns, rows, drawingTool}) {\n    return {\n        type: `APPLY_${drawingTool}`,\n        paletteColor,\n        color,\n        id,\n        columns,\n        rows\n    }\n}\n\nexport function switchTool(drawingTool) {\n    return {\n        type: type.SWITCH_TOOL,\n        drawingTool\n    };\n}\n\nexport function selectPaletteColor(id) {\n    return {\n        type: type.SELECT_PALETTE_COLOR,\n        id\n    };\n}\n\nexport function addCustomColor(color) {\n    return {\n        type: type.ADD_CUSTOM_COLOR,\n        color\n    };\n}\n\nexport function undo() {\n    return ActionCreators.undo();\n};\n  \nexport function redo() {\n    return ActionCreators.redo();\n};\n  \n","//import * as tool from '../redux/toolTypes';\n\nconst getCellActionProps = (props, id) => ({\n  color: props.grid.get(id),\n  id,\n  ...props\n});\n\nconst drawHandler = (canvas) => {\n    return {\n        onMouseDown(id, ev) {\n            ev.preventDefault();\n            const { props } = canvas;\n            const actionProps = getCellActionProps(props, id);\n            props.applyTools(actionProps);\n        },\n    }\n};\n\nexport default drawHandler;","import React from 'react';\n\nconst CELL_NULL_COLOR = 'rgba(49, 49, 49, 0.5)';\n\nclass Cell extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const {cell: {color, width}} = this.props;\n        const updated = (nextProps.color !== color) || (nextProps.width !== width);\n        return updated;\n    }\n\n    render() {\n        const {\n            cell: {color, width},\n            id,\n            drawHandler\n            } = this.props;\n        const style = {\n            width: `${width}%`,\n            height: `${width}%`,\n            backgroundColor:  color || CELL_NULL_COLOR\n        };\n\n        return (\n            <div\n              style={style} className='cell'\n              onMouseDown={(ev) => drawHandler.onMouseDown(id, ev)}\n            />\n        );\n    }\n}\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell';\n\nclass Grid extends React.Component {\n    shouldComponentUpdate(newProps) {\n        const { cells } = this.props;\n        return newProps.cells !== cells;\n    }\n    \n    render() {\n        const { style, cells } = this.props;\n\n        return (\n            <div style={style}>\n                {cells.map((cell, i) => {\n                    return (\n                        <Cell cell={cell}\n                          key={cell.id}\n                          id={i}\n                          drawHandler={this.props.drawHandler}\n                        />\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { applyTools } from '../redux/actions/action';\nimport drawHandler from '../utils/drawHandler';\nimport Grid from './Grid';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.drawHandler = drawHandler(this);\n    }\n\n    shouldComponentUpdate(newProps) {\n        const { grid } = this.props;\n        return newProps.grid !== grid;\n    }\n    \n    render() {\n        const { props } = this;\n        const cells = props.grid.map((color, i) => ({\n            id: i,\n            width: 100 / props.columns,\n            color\n        }));\n        \n        const style = {\n            height: 400,\n            width: 400,\n        };\n        return (\n            <Grid\n              style={style}\n              cells={cells}\n              drawingTool={props.drawingTool}\n              drawHandler={this.drawHandler}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    const drawingTool = state.present.get('drawingTool');\n    const palette = state.present.get('palette');\n    const activeIndex = palette.get('active');\n    const paletteColor = palette.getIn(['grid', activeIndex === -1 ? 0: activeIndex, 'color']);\n    return {\n        grid: canvas.get('grid'),\n        paletteColor,\n        drawingTool,\n        columns: canvas.get('columns'),\n        rows: canvas.get('rows')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    applyTools: cellProps => dispatch(applyTools(cellProps))\n});\n\nconst CanvasContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Canvas);\n\nexport default CanvasContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst Eraser = ({ usingEraser, switchEraser}) => {\n    return (\n        <button\n          type=\"button\"\n          aria-label=\"Eraser Tool\"\n          onClick={switchEraser}\n          className=\"eraser\"\n        />\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingEraser: state.present.get('drawingTool') === tool.ERASER\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchEraser: () => dispatch(switchTool(tool.ERASER))\n});\n\nconst EraserContainer = connect(mapStateToProps, mapDispatchToProps)(Eraser);\n\nexport default EraserContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst EyeDropper = ({ usingEyeDropper, switchEyeDropper}) => {\n    return (\n        <button\n          type=\"button\"\n          aria-label=\"EyeDropper Tool\"\n          onClick={switchEyeDropper}\n          className=\"eraser\"\n        />\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingEyeDropper: state.present.get('drawingTool') === tool.EYE_DROPPER\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchEyeDropper: () => dispatch(switchTool(tool.EYE_DROPPER))\n});\n\nconst EyeDropperContainer = connect(mapStateToProps, mapDispatchToProps)(EyeDropper);\n\nexport default EyeDropperContainer;\n","import React from 'react';\n\nconst CELL_NULL_COLOR = 'rgba(49, 49, 49, 0.5)';\n\nclass PlatteCell extends React.Component {\n    render() {\n        const { width, color, active, selectPaletteColor, id } = this.props;\n\n        const handleClick = () => selectPaletteColor(id);\n\n        const style = {\n            width: `${width}%`,\n            height: \"30px\",\n            backgroundColor:  color || CELL_NULL_COLOR\n        };\n        return (\n            <button style={style} onClick={handleClick}/>\n        );\n    };\n};\n\nexport default PlatteCell;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { selectPaletteColor } from '../redux/actions/action';\nimport PaletteCell from './PaletteCell';\n\nclass PaletteGrid extends React.Component { \n\n    render() {\n        const { grid, active, selectPaletteColor } = this.props;\n        const width = 100 / 6;\n        return (\n            <div>\n                {grid.map((cell, i) => {\n                    return (\n                        <PaletteCell color={cell.get('color')}\n                          acive={active}\n                          width={width}\n                          key={cell.get('id')}\n                          id={i}\n                          selectPaletteColor={selectPaletteColor}\n                        />\n                    )\n                })}\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => {\n    const palette = state.present.get('palette').toObject();\n    return {\n        grid: palette.grid,\n        active: palette.active\n    };\n};\n\nconst mapDispatchToProps = dispatch =>   \n  bindActionCreators(\n    {\n      selectPaletteColor\n    },\n    dispatch\n);\n\nconst PaletteGridContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PaletteGrid);\n\nexport default PaletteGridContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst PaintBucket = ({ usingPaintBucket, switchPaintBucket}) => {\n    return (\n        <button\n          type=\"button\"\n          aria-label=\"Paint Bucket Tool\"\n          onClick={switchPaintBucket}\n        />\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingPaintBucket: state.present.get('drawingTool') === tool.PAINT_BUCKET\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchPaintBucket: () => dispatch(switchTool(tool.PAINT_BUCKET))\n});\n\nconst PaintBucketContainer = connect(mapStateToProps, mapDispatchToProps)(PaintBucket);\n\nexport default PaintBucketContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../redux/actions/action';\n\nconst UndoRedo = props => {\n  const undo = () => {\n    props.actions.undo();\n  };\n\n  const redo = () => {\n    props.actions.redo();\n  };\n\n  return (\n    <div className=\"undo-redo\">\n      <button\n        type=\"button\"\n        onClick={() => {\n          undo();\n        }}\n      >\n        <span className=\"undo-redo__icon--undo\" />\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          redo();\n        }}\n      >\n        <span className=\"undo-redo__icon--redo\" />\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nconst UndoRedoContainer = connect(\n  null,\n  mapDispatchToProps\n)(UndoRedo);\nexport default UndoRedoContainer;","import React from 'react';\nimport Modal from 'react-awesome-modal';\nimport Dropzone from 'react-dropzone'\n\nclass Popup extends React.Component {\n    fileProcess = event => {\n        this.setState({\n            file: event.target.files[0]\n        });\n    }\n\n    fileUpload = () => {\n        console.log(this.state);\n    }\n    render() {\n        return (\n            <Modal \n                visible={this.props.visible}\n                width=\"80%\"\n                height=\"80%\"\n                effect=\"fadeInUp\"\n                onClickAway={() => this.props.close()}>\n                <div className='modal-content'>\n                    <a className='popup-close' onClick={() => this.props.close()}>x</a>\n                    <div className='popup-header'>Upload</div>\n                    <input type=\"file\" onChange={this.fileProcess}></input>\n                    <button onClick={this.fileUpload}>upload</button>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nexport default Popup;\n","import React from 'react';\nimport './css/imports.css';\n\nimport CanvasContainer from './components/Canvas';\n//import ColorPicker from './components/ColorPicker';\nimport EraserContainer from './components/Eraser';\nimport EyeDropperContainer from './components/EyeDropper';\nimport PaletteGridContainer from './components/PaletteGrid';\nimport PaintBucketContainer from './components/PaintBucket';\nimport UndoRedoContainer from './components/UndoRedo';\nimport Popup from './components/Popup';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      popUpType: null,\n      popUpShown: false\n    };\n  }\n\n  setPopUp(type) {\n    this.setState({\n      popUpShown: true,\n      popUpType: type,\n    });\n  }\n\n  closePopUp() {\n    this.setState({\n      popUpShown: false,\n      popUpType: null,\n    });\n  }\n\n  render() {\n    return (\n      <div className='background'>\n        <CanvasContainer/>\n        <PaletteGridContainer />\n        <EraserContainer />\n        <PaintBucketContainer />\n        <EyeDropperContainer/>\n        <UndoRedoContainer />\n        <div onClick={() => this.setPopUp('upload')}>Upload</div>\n        <Popup visible={this.state.popUpShown} close={() => this.closePopUp()}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import{List, Map} from 'immutable';\nimport * as type from '../actions/actionTypes';\n\n// const initGrid = (numCells) => {\n//     let grid = [];\n//     for(let i = 0; i < numCells; i++) {\n//         grid.push('');\n//     }\n//     return grid;\n// }\n\nconst initCanvas = (action = {})  => {\n  const options = action.options || {};\n  const columns = parseInt(options.columns, 10) || 16;\n  const rows = parseInt(options.rows, 10) || 16;\n\n  let grid = List();\n  for(let i = 0; i < rows * columns; i++) {\n    grid = grid.push('');\n  }\n\n  return Map({\n    grid,\n    columns,\n    rows\n  })\n}\n\nexport default function(canvas = initCanvas(), action) {\n    switch (action.type) {\n      case type.SET_INIT_STATE:\n        return initCanvas(action);\n      default:\n        return canvas;\n    }\n  }","//import{List, Map} from 'immutable';\nimport * as type from '../actions/actionTypes';\n\nconst GRID_INIT_COLOR = 'rgba(49, 49, 49, 1)';\n\nconst drawPixel = (grid, color, id) => {\n    return grid.set(id, color);\n}\n\nconst applyPencilToGrid = (grid, {paletteColor, id}) => {\n    const newGrid = drawPixel(grid, paletteColor, id);\n    return newGrid;\n}\n\nconst applyPencil = (canvas, action) => {\n    const newGrid = applyPencilToGrid(canvas.get('grid'), action);\n    const newCanvas = canvas.set('grid', newGrid);\n    return newCanvas;\n};\n\nconst applyEraser = (canvas, action) => {\n    const newGrid = drawPixel(canvas.get('grid'), '', action.id);\n    const newCanvas = canvas.set('grid', newGrid);\n    return newCanvas;\n}\n\nconst isSameColor = (colorA, colorB) =>\n  (colorA || GRID_INIT_COLOR) === (colorB || GRID_INIT_COLOR);\n\nconst getSameColorAdjCells = (grid, color, id, columns, rows) => {\n    const sameColorAdjCells = [];\n\n    // test upper cell\n    if (id >= columns) {\n      if (isSameColor(grid.get(id - columns), color)) {\n        sameColorAdjCells.push(id - columns);\n      }\n    }\n\n    // test bottom cell\n    if (id < (columns - 1) * rows) {\n      if (isSameColor(grid.get(id + columns), color)) {\n        sameColorAdjCells.push(id + columns);\n      }\n    }\n\n    // test left cell\n    if(id % columns !== 0) {\n      if (isSameColor(grid.get(id - 1), color)) {\n        sameColorAdjCells.push(id - 1);\n      }\n    }\n    \n    //test right cell\n    if (id % columns !== (columns - 1)) {\n      if (isSameColor(grid.get(id + 1), color)) {\n        sameColorAdjCells.push(id + 1);\n      }\n    }\n    return sameColorAdjCells;\n};\n\nconst applyPaintBucketToGrid = (grid, { id, paletteColor, columns, rows }) => {\n    const originalColor = grid.get(id);\n    const cellQueue = [id];\n    let newGrid = grid;\n    let currentId;\n    let adjCells;\n\n    while (cellQueue.length > 0) {\n      currentId = cellQueue.shift();\n      newGrid = drawPixel(newGrid, paletteColor, currentId);\n      adjCells = getSameColorAdjCells(newGrid, originalColor, currentId, columns, rows);\n\n      for(let i = 0; i < adjCells.length; i++) {\n          let adjId = adjCells[i];\n          let adjColor = newGrid.get(adjId);\n          if (cellQueue.indexOf(adjId) === -1 && adjColor !== paletteColor) {\n            cellQueue.push(adjId);\n          }\n      }\n    }\n    return newGrid;\n};\n\nconst applyPaintBucket = (canvas, action) => {\n    const grid = canvas.get('grid');\n    const newGrid = applyPaintBucketToGrid(grid, action);\n    const newCanvas = canvas.set('grid', newGrid);\n    return newCanvas;\n}\n\nexport default function(canvas, action) {\n    switch (action.type) {\n        case type.APPLY_PENCIL:\n            return applyPencil(canvas, action);\n        case type.APPLY_ERASER:\n            return applyEraser(canvas, action);\n        case type.APPLY_PAINT_BUCKET:\n            return applyPaintBucket(canvas, action);\n        default:\n            return canvas;\n    }\n}","import * as type from '../actions/actionTypes';\nimport * as tool from '../toolTypes';\n\nconst switchTool = (drawingTool = tool.PENCIL, action) => {\n    if (drawingTool === action.drawingTool) {\n        return tool.PENCIL;\n    } else {\n        return action.drawingTool;\n    }\n}\n\nexport default function drawingToolReducer(drawingTool = tool.PENCIL, action) {\n    switch (action.type) {\n        case type.SET_INIT_STATE:\n            return tool.PENCIL;\n        case type.SWITCH_TOOL:\n            return switchTool(drawingTool, action);\n        default:\n            return drawingTool;\n    }\n};","import * as type from '../actions/actionTypes';\nimport * as tool from '../toolTypes';\nimport { List, Map } from 'immutable';\n\nconst initPaletteGrid = () => {\n    return List([\n        '#ff0000',\n        '#ff3300',\n        '#ff9900',\n        '#ffff00',\n        '#99ff00',\n        '#00ff00',\n        '#00ffff',\n        '#0000ff',\n        '#6600ff',\n        '#ff00ff',\n        '#ff0066'\n    ]).map((color, i) => Map({ color, id: i}));\n};\n\nconst initPalette = () => {\n    return Map({\n        grid: initPaletteGrid(),\n        active: 0\n    });\n};\n\nconst selectPaletteColor = (palette, action) => {\n    return palette.set('active', action.id);\n};\n\nconst disablePaletteColor = (palette, action) => {\n    if ( action.drawingTool === tool.ERASER ) {\n        return palette.set('active', -1);\n    }\n    return palette;\n};\n\nconst searchForColor = (grid, color) => {\n    for (let i = 0; i < grid.size - 1; i++) {\n        if (grid.getIn([i, 'color']) === color) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nconst applyEyeDropper = (palette, action) => {\n    const color = action.color;\n    const grid = palette.get('grid');\n    const index = searchForColor(grid, color);\n    if (index !== -1) {\n        return palette.set('active', index);\n    }\n    const location = grid.size - 1;\n    return palette.merge({\n        grid: grid.setIn([location, 'color'], color),\n        active: location\n    });\n};\n\nexport default function (palette = initPalette(), action) {\n    switch (action.type) {\n        case type.SET_INIT_STATE:\n            return initPalette();\n        case type.SELECT_PALETTE_COLOR:\n            return selectPaletteColor(palette, action);\n        case type.APPLY_EYE_DROPPER:\n            return applyEyeDropper(palette, action);\n        case type.SWITCH_TOOL:\n            return disablePaletteColor(palette, action);\n        default:\n            return palette;\n    }     \n}","import { Map } from 'immutable';\nimport canvasReducer from './canvasReducer';\nimport selectedCanvasReducer from './selectedCanvasReducer';\nimport drawingToolReducer from './drawingToolReducer';\nimport paletteReducer from './paletteReducer';\nimport * as type from '../actions/actionTypes';\n\nfunction setInitialState(state) {\n  const cellSize = 10;\n\n  const initialState = {\n    cellSize,\n  };\n\n  return state.merge(initialState);\n}\n\nfunction generateDefaultState() {\n  return setInitialState(Map(), { type: type.SET_INIT_STATE, state: {} });\n}\n\nconst pipeReducers = reducers => (initialState, action) =>\n  reducers.reduce((state, reducer) => reducer(state, action), initialState);\n\nfunction partialReducer(state, action) {\n  switch (action.type) {\n    case type.SET_INIT_STATE:\n      return setInitialState(state);\n    default:\n      return state;\n  }\n}\n\nexport default function(state = generateDefaultState(), action) {\n  return partialReducer(state, action).merge({\n    canvas: pipeReducers([canvasReducer, selectedCanvasReducer])\n      (state.get('canvas'),\n      action),\n    drawingTool: drawingToolReducer(state.get('drawingTool'), action),\n    palette: paletteReducer(state.get('palette'), action)\n  });\n}\n","import { createStore } from \"redux\";\nimport undoable, { includeAction } from 'redux-undo';\nimport reducer from \"./reducers/reducer\";\nimport {\n    APPLY_ERASER,\n    APPLY_EYE_DROPPER,\n    APPLY_PAINT_BUCKET,\n    APPLY_PENCIL\n} from './actions/actionTypes';\n\nconst createIncludedActions = () =>\n  includeAction([\n    APPLY_ERASER,\n    APPLY_EYE_DROPPER,\n    APPLY_PAINT_BUCKET,\n    APPLY_PENCIL\n  ]);\n\nlet store = createStore(undoable(reducer, {\n    filter: createIncludedActions(),\n    debug: true\n    })\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/imports.css';\nimport './index.css'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\nimport * as serviceWorker from './serviceWorker';\n\n// as shown in react-redux document to make the Redux store available\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App dispatch={store.dispatch}/>\n  </Provider>,\n  rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}