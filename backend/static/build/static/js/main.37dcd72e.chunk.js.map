{"version":3,"sources":["redux/toolTypes.js","redux/actions/actionTypes.js","redux/actions/action.js","utils/pokemon.js","utils/localStorage.js","utils/startup.js","components/Header.jsx","utils/drawHandler.js","components/Cell.jsx","components/Grid.jsx","components/Canvas.jsx","components/ColorPicker.jsx","components/Pencil.jsx","components/Eraser.jsx","components/EyeDropper.jsx","components/PaletteCell.jsx","components/PaletteGrid.jsx","components/PaintBucket.jsx","components/UndoRedo.jsx","components/Animation.jsx","components/Preview.jsx","utils/generateCSS.js","components/Upload.jsx","components/LocalData.jsx","components/Download.jsx","components/DisplayCSS.jsx","components/Popup.jsx","components/NewProject.jsx","components/Clear.jsx","components/Save.jsx","components/Frame.jsx","components/FrameList.jsx","components/Editor.jsx","components/ChangeDimension.jsx","components/Duration.jsx","components/CellSize.jsx","App.js","redux/reducers/canvasReducer.js","redux/reducers/selectedCanvasReducer.js","redux/reducers/drawingToolReducer.js","redux/reducers/paletteReducer.js","redux/reducers/reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["PENCIL","APPLY_PENCIL","tool","APPLY_ERASER","APPLY_PAINT_BUCKET","APPLY_EYE_DROPPER","APPLY_COLOR_PICKER","init","type","newProject","clear","setCanvas","grids","paletteGrid","cellSize","columns","rows","changeName","name","changeWidth","newColumns","Math","max","min","changeHeight","newRows","changeDuration","duration","parseInt","changeCellSize","size","importPixelate","options","applyTools","paletteColor","color","id","drawingTool","switchTool","selectPaletteColor","applyColorPicker","addNewFrame","addDuplicatedFrame","deleteFrame","switchFrame","reorderFrame","initIndex","finalIndex","undo","ActionCreators","redo","pokemon","getDataFromStorage","storage","data","getItem","JSON","parse","e","removeProjectFromStorage","indexToRemove","dataStored","newCurrent","stored","splice","length","current","setItem","stringify","saveDataToStorage","initialSetup","dispatch","paletteGridData","actions","initStorage","HeaderContainer","connect","state","present","get","className","href","target","rel","getCellActionProps","props","grid","drawHandlerProvider","canvas","onMouseUp","setState","pressed","drawHandlers","onMouseDown","ev","preventDefault","actionProps","onMouseOver","Cell","nextProps","this","cell","width","drawHandler","style","paddingBottom","backgroundColor","onFocus","onTouchStart","React","Component","Grid","newProps","cells","map","i","key","Canvas","onTouchEnd","onTouchCancel","CanvasContainer","palette","activeIndex","getIn","cellProps","ColorPicker","visible","handleClick","handleClose","applyPencil","colorString","rgb","r","g","b","a","styles","picker","position","bottom","left","popover","zIndex","right","top","cover","onClick","onChange","onClose","ColorPickerContainer","toObject","active","PencilContainer","usingPencil","switchPencil","aria-label","EraserContainer","usingEraser","switchEraser","EyeDropperContainer","usingEyeDropper","switchEyeDropper","PlatteCell","height","PaletteGrid","PaletteCell","PaletteGridContainer","bindActionCreators","PaintBucketContainer","usingPaintBucket","switchPaintBucket","UndoRedoContainer","Animation","radium","pulseKeyframes","keyframes","boxShadow","animation","animationName","Preview","storedData","animationData","cssString","animate","Duration","previewWrapper","frames","newFrames","List","equalPercentage","forEach","frame","index","interval","round","newFrame","Map","push","getAnimationKeyframes","pSize","c","generateAnimationCSSData","getImageData","format","generatePixelDrawCss","MozBoxShadow","WebkitBoxShadow","generatePreview","Upload","column","row","fileUpload","fileProcess","evt","console","log","file","handleChangeCol","value","handleChangeRow","pattern","UploadContainer","FormData","NotificationManager","info","append","fetch","method","body","then","res","json","success","warning","browserStorage","localStorage","LoadData","importedProject","projectData","exportedStringToProjectData","importProjectData","close","error","stopPropagation","elem","fromJS","drawingClick","onKeyPress","tabIndex","event","removeFromStorage","drawingsStored","getDrawing","loadType","getOptions","DownloadContainer","headers","blob","FileSaver","saveAs","catch","err","DisplayCSS","readOnly","getAnimationCssClassOutput","cssClassName","exportAnimationData","getImageCssClassOutput","getCssImageClassOutput","Popup","changeType","getImportContent","importType","closeModal","open","openModal","getExportContent","exportType","gifPreview","textAlign","getPreviewContent","getModalContent","popUpType","content","values","labelField","searchable","effect","onClickAway","PopupContainer","activeGrid","NewProjectContainer","ClearContainer","SaveContainer","drawingToSave","saveProjectToStorage","Frame","addDuplicate","draggableId","toString","provided","draggableProps","dragHandleProps","ref","innerRef","role","undefined","FrameList","onDragEnd","result","destination","source","droppableId","frameList","display","flexDirection","marginLeft","marginBottom","frameListContent","flex","minHeight","overflow","direction","droppableProps","getFrames","placeholder","FrameListContainer","Editor","action","ChangeDimensionContainer","setTimeout","DurationContainer","CellSizeContainer","App","popUpShown","setPopUp","closePopUp","initCanvas","merge","newGrids","newGrid","dCol","j","insert","changeWidthForOne","dRow","changeHeightForOne","remove","moveForward","insertPos","deletePos","drawPixel","set","applyPencilToGrid","setIn","isSameColor","colorA","colorB","getSameColorAdjCells","sameColorAdjCells","applyPaintBucket","currentId","adjCells","originalColor","cellQueue","shift","adjId","adjColor","indexOf","applyPaintBucketToGrid","applyEraser","drawingToolReducer","initPalette","setPalette","disablePaletteColor","applyEyeDropper","searchForColor","location","setInitialState","initialState","generateDefaultState","pipeReducers","reducers","reduce","reducer","partialReducer","store","createStore","undoable","canvasReducer","selectedCanvasReducer","paletteReducer","filter","includeAction","debug","Boolean","window","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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GAAG,mBAAmB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,oBAAoB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,oBAAoB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,oBAAoB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,oBAAoB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,GAAG,mBAAmB,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,GAAG,GAAG,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,GAAG,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,GAAG,uBAAuB,GAAG,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACpwK,CACE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,qBAAqB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,qBAAqB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,mBAAmB,qBAAqB,qBAAqB,qBAAqB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,mBAAmB,qBAAqB,wBAAwB,qBAAqB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,qBAAqB,wBAAwB,wBAAwB,qBAAqB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,mBAAmB,mBAAmB,wBAAwB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,mBAAmB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,mBAAmB,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACllK,CACE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,mBAAmB,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,yBAAyB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,yBAAyB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,yBAAyB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,yBAAyB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,mBAAmB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,mBAAmB,mBAAmB,wBAAwB,wBAAwB,yBAAyB,uBAAuB,uBAAuB,mBAAmB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,mBAAmB,uBAAuB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,wBAAwB,wBAAwB,wBAAwB,wBAAwB,yBAAyB,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","file":"static/js/main.37dcd72e.chunk.js","sourcesContent":["export const PENCIL = 'PENCIL';\nexport const ERASER = 'ERASER';\nexport const PAINT_BUCKET = 'PAINT_BUCKET';\nexport const MOVE = 'MOVE';\nexport const EYE_DROPPER = 'EYE_DROPPER';\nexport const COLOR_PICKER = 'COLOR_PICKER';","import * as tool from '../toolTypes';\n\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_INIT_STATE = 'SET_INIT_STATE'; \nexport const NEW_PROJECT = 'NEW_PROJECT';\nexport const CLEAR = 'CLEAR';\nexport const SET_CANVAS = 'SET_CANVAS';\nexport const CHANGE_NAME = 'CHANGE_NAME';\nexport const CHANGE_WIDTH = 'CHANGE_WIDTH';\nexport const CHANGE_HEIGHT = 'CHANGE_HEIGHT';\nexport const CHANGE_DURATION = 'CHANGE_DURATION';\nexport const CHANGE_CELL_SIZE = 'CHANGE_CELL_SIZE';\nexport const IMPORT_PIXELATE = 'IMPORT_PIXELATE';\nexport const APPLY_PENCIL = `APPLY_${tool.PENCIL}`;\nexport const APPLY_ERASER = `APPLY_${tool.ERASER}`;\nexport const APPLY_PAINT_BUCKET = `APPLY_${tool.PAINT_BUCKET}`;\nexport const APPLY_EYE_DROPPER = `APPLY_${tool.EYE_DROPPER}`;\nexport const APPLY_COLOR_PICKER = `APPLY_${tool.COLOR_PICKER}`;\nexport const SWITCH_TOOL = 'SWITCH_TOOL';\nexport const SELECT_PALETTE_COLOR = 'SELECT_PALETTE_COLOR';\nexport const SELECT_CUSTOM_COLOR = 'SELECT_CUSTOM_COLOR';\nexport const ADD_NEW_FRAME = 'ADD_NEW_FRAME';\nexport const ADD_DUPLICATED_FRAME = 'ADD_DUPLICATED_FRAME';\nexport const DELETE_FRAME = 'DELETE_FRAME';\nexport const SWITCH_FRAME = 'SWITCH_FRAME';\nexport const REORDER_FRAMES = 'REORDER_FRAMES';\n\n","import * as type from './actionTypes';\nimport { ActionCreators } from 'redux-undo';\n\nconst MAX_COLUMNS = 128;\nconst MAX_ROWS = 128;\nconst MIN_COLUMNS = 5;\nconst MIN_ROWS = 5;\n\nexport function init() {\n    return {\n        type: type.SET_INIT_STATE\n    }\n}\n\nexport function newProject() {\n    return {\n        type: type.NEW_PROJECT\n    }\n}\n\nexport function clear() {\n    return {\n        type: type.CLEAR\n    }\n}\n\nexport function setCanvas(grids, paletteGrid, cellSize, columns, rows) {\n    return {\n        type: type.SET_CANVAS,\n        grids,\n        paletteGrid,\n        cellSize,\n        columns,\n        rows\n    }\n}\n\nexport function changeName(name) {\n    return {\n        type: type.CHANGE_NAME,\n        name\n    }\n}\n\nexport function changeWidth(newColumns) {\n    return {\n        type: type.CHANGE_WIDTH,\n        newColumns: Math.max(Math.min(newColumns, MAX_COLUMNS), Math.max(newColumns, MIN_COLUMNS))\n    }\n}\n\nexport function changeHeight(newRows) {\n    return {\n        type: type.CHANGE_HEIGHT,\n        newRows: Math.max(Math.min(newRows, MAX_ROWS), Math.max(newRows, MIN_ROWS))\n    }\n}\n\nexport function changeDuration (duration) {\n    return {\n        type: type.CHANGE_DURATION,\n        duration: parseInt(duration, 10)\n    }\n}\n\nexport function changeCellSize (size) {\n    return {\n        type: type.CHANGE_CELL_SIZE,\n        size: parseInt(size, 10)\n    }\n}\n\nexport function importPixelate({grids, columns, rows, options}) {\n    return {\n        type: type.IMPORT_PIXELATE,\n        grids,\n        columns,\n        rows,\n        options\n    };\n}\n\nexport function applyTools({paletteColor = '', color , id, columns, rows, drawingTool}) {\n    return {\n        type: `APPLY_${drawingTool}`,\n        paletteColor,\n        color,\n        id,\n        columns,\n        rows\n    }\n}\n\nexport function switchTool(drawingTool) {\n    return {\n        type: type.SWITCH_TOOL,\n        drawingTool\n    };\n}\n\nexport function selectPaletteColor(id) {\n    return {\n        type: type.SELECT_PALETTE_COLOR,\n        id\n    };\n}\n\nexport function applyColorPicker(color) {\n    return {\n        type: type.APPLY_COLOR_PICKER,\n        color\n    };\n}\n\nexport function addNewFrame() {\n    return {\n        type: type.ADD_NEW_FRAME,\n    }\n};\n\nexport function addDuplicatedFrame(id) {\n    return {\n        type: type.ADD_DUPLICATED_FRAME,\n        id\n    }\n};\n\nexport function deleteFrame(id) {\n    return {\n        type: type.DELETE_FRAME,\n        id\n    }\n}\n\nexport function switchFrame(id) {\n    return {\n        type: type.SWITCH_FRAME,\n        id\n    }\n}\n\nexport function reorderFrame(initIndex, finalIndex) {\n    return {\n      type: type.REORDER_FRAMES,\n      initIndex,\n      finalIndex\n    };\n}\n\nexport function undo() {\n    return ActionCreators.undo();\n};\n  \nexport function redo() {\n    return ActionCreators.redo();\n};\n  \n","export const pokemon = {\n    \"grids\": [\n        [\n            \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(23,111,23,1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"\",\"\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(76, 175, 80, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(76, 175, 80, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n        ],[\n            \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(255, 193, 7, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(255, 152, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n        ],[\n            \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(121, 85, 72, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 188, 212, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(255, 235, 59, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(255, 255, 255, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(3, 169, 244, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"rgba(0, 0, 0, 1)\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n        ]\n    ],\n    \"paletteGridData\":[{'color': 'rgb(0,0,0)', 'id': 1},\n    {'color': 'rgb(255,0,0)', 'id': 2},\n    {'color': 'rgb(255,51,0)', 'id': 3},\n    {'color': 'rgb(255,153,0)', 'id': 4},\n    {'color': 'rgb(255,255,0)', 'id': 5},\n    {'color': 'rgb(153,255,0)', 'id': 6},\n    {'color': 'rgb(0,255,0)', 'id': 7},\n    {'color': 'rgb(0,255,255)', 'id': 8},\n    {'color': 'rgb(0,0,255)', 'id': 9},\n    {'color': 'rgb(102,0,255)', 'id': 10},\n    {'color': 'rgb(255,0,255)', 'id': 11},\n    {'color': 'rgb(192,192,192)', 'id': 12},\n    {'color': 'rgb(255,255,255)', 'id': 13},\n    {'color': '' , 'id': 14},\n    {'color': '' , 'id': 15},\n    ],\n    \"cellSize\":3,\n    \"columns\":21,\n    \"rows\":21,\n    \"animate\":true\n};","import { pokemon } from './pokemon';\nconst STORAGE_KEY = 'PIXEL_ART_HUB';\n\nconst saveDataToStorage = (storage, data) => {\n    try {\n      storage.setItem(STORAGE_KEY, JSON.stringify(data));\n      return true;\n    } catch (e) {\n      return false; // There was an error\n    }\n}\n  \nexport function initStorage(storage) {\n    storage.setItem(\n        STORAGE_KEY,\n        JSON.stringify({\n        stored: [pokemon],\n        current: 0\n        })\n    );\n}\n\nexport function getDataFromStorage(storage) {\n  try {\n    const data = storage.getItem(STORAGE_KEY);\n    return data ? JSON.parse(data) : false;\n  } catch (e) {\n    return false; // There was an error\n  }\n}\n\nexport function saveProjectToStorage(storage, projectData) {\n    try {\n      let dataStored = getDataFromStorage(storage);\n      if (dataStored) {\n        dataStored.stored.push(projectData);\n        dataStored.current = dataStored.stored.length - 1;\n      } else {\n        dataStored = {\n          stored: [projectData],\n          current: 0\n        };\n      }\n      storage.setItem(STORAGE_KEY, JSON.stringify(dataStored));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  export function removeProjectFromStorage(storage, indexToRemove) {\n    const dataStored = getDataFromStorage(storage);\n    if (dataStored) {\n      let newCurrent = 0;\n      dataStored.stored.splice(indexToRemove, 1);\n      if (dataStored.stored.length === 0) {\n        newCurrent = -1; // Empty collection\n      } else if (dataStored.current > indexToRemove) {\n        newCurrent = dataStored.current - 1; // Current is greater than the one to remove\n      }\n      dataStored.current = newCurrent;\n      return saveDataToStorage(storage, dataStored);\n    }\n    return false; // There was an error if it reaches this code\n  }\n  \n  /*\n    Returns the export code\n  */\n  export function generateExportString(projectData) {\n    try {\n      return JSON.stringify(projectData);\n    } catch (e) {\n      return 'Sorry, there was an error';\n    }\n  }\n  \n  /*\n    Returns project data ready from a exported data string\n  */\n  export function exportedStringToProjectData(projectData) {\n    if (projectData === '') {\n      return false;\n    }\n    try {\n      return JSON.parse(projectData);\n    } catch (e) {\n      return false;\n    }\n  }\n  ","import * as actions from '../redux/actions/action';\nimport { initStorage, getDataFromStorage } from './localStorage';\n\nconst initialSetup = (dispatch, storage) => {\n  const dataStored = getDataFromStorage(storage);\n\n  if (dataStored) {\n    // Load current project from the storage\n    if (dataStored.current >= 0) {\n      const {\n        grids,\n        paletteGridData,\n        columns,\n        rows,\n        cellSize,\n        duration\n      } = dataStored.stored[dataStored.current];\n\n      dispatch(\n        actions.setCanvas(\n          grids,\n          paletteGridData,\n          cellSize,\n          columns,\n          rows,\n          duration\n        )\n      );\n    }\n  } else {\n    initStorage(storage);\n    let newData = getDataFromStorage(storage);\n    const {\n      grids,\n      paletteGridData,\n      columns,\n      rows,\n      cellSize,\n      duration\n    } = newData.stored[0];\n\n    dispatch(\n      actions.setCanvas(\n        grids,\n        paletteGridData,\n        cellSize,\n        columns,\n        rows,\n        duration\n      )\n    );\n  }\n};\n\nexport default initialSetup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeName } from '../redux/actions/action';\n\nconst Header = ({ changeName, name }) => {\n    \n    return (\n      <div className='header'>\n        <div className='title'>\n          <h2> PIXEL ART HUB </h2>\n        </div>\n        <div className=\"author\">\n          <h5>GITHUB: <a href=\"https://github.com/ftlll/pixel\" target=\"_blank\" rel='noopener noreferrer'>FTL</a></h5>\n        </div>\n      </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    const grids = state.present.get('canvas');\n    return {\n        name: grids.get('name')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    changeName: () => dispatch(changeName)\n});\n  \nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer;","//import * as tool from '../redux/toolTypes';\n\nconst getCellActionProps = (props, id) => ({\n  color: props.grid.get(id),\n  id,\n  ...props\n});\n\nconst drawHandlerProvider = canvas => {\n    const drawHandlers = (grid) => {\n        return {\n            onMouseDown(id, ev) {\n                ev.preventDefault();\n                const { props } = grid;\n                const actionProps = getCellActionProps(props, id);\n                props.applyTools(actionProps);\n                canvas.setState({\n                    pressed: true\n                });\n            },\n            onMouseOver(id, ev) {\n                ev.preventDefault();\n                const { props } = grid;\n                const actionProps = getCellActionProps(props, id);\n                if (canvas.state.pressed) {\n                    props.applyTools(actionProps);\n                }\n            },\n        }\n    };\n    return {\n        onMouseUp() {\n            canvas.setState({\n                pressed: false\n            });\n        },\n        drawHandlers\n    }\n} \n\nexport default drawHandlerProvider;","import React from 'react';\n\nconst CELL_NULL_COLOR = 'rgba(49, 49, 49, 0.4)';\n\nclass Cell extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const {cell: {color, width}} = this.props;\n        const updated = (nextProps.color !== color) || (nextProps.width !== width);\n        return updated;\n    }\n\n    render() {\n        const {\n            cell: {color, width},\n            id,\n            drawHandler\n            } = this.props;\n        const style = {\n            width: `${width}%`,\n            paddingBottom: `${width}%`,\n            backgroundColor:  color || CELL_NULL_COLOR\n        };\n\n        return (\n            <div\n              style={style} className='cell'\n              onMouseDown={(ev) => drawHandler.onMouseDown(id, ev)}\n              onMouseOver={ev => drawHandler.onMouseOver(id, ev)}\n              onFocus={ev => drawHandler.onMouseOver(id, ev)}\n              onTouchStart={ev => drawHandler.onMouseDown(id, ev)}\n            />\n        );\n    }\n}\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell';\n\nclass Grid extends React.Component {\n    shouldComponentUpdate(newProps) {\n        const { cells } = this.props;\n        return newProps.cells !== cells;\n    }\n    \n    render() {\n        const { style, cells } = this.props;\n\n        return (\n            <div style={style}>\n                {cells.map((cell, i) => {\n                    return (\n                        <Cell cell={cell}\n                          key={cell.id}\n                          id={i}\n                          drawHandler={this.props.drawHandler}\n                        />\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { applyTools } from '../redux/actions/action';\nimport drawHandlerProvider from '../utils/drawHandler';\nimport Grid from './Grid';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {pressed: false};\n        this.drawHandlerProvider = drawHandlerProvider(this);\n    }\n\n    shouldComponentUpdate(newProps) {\n        const { grid } = this.props;\n        return newProps.grid !== grid;\n    }\n    \n    render() {\n        const { props } = this;\n        const cells = props.grid.map((color, i) => ({\n            id: i,\n            width: 100 / props.columns,\n            color\n        }));\n        const style = {\n            width: '90%'\n        }\n        return (\n            <div onMouseUp={this.drawHandlerProvider.onMouseUp}\n                onTouchEnd={this.drawHandlerProvider.onMouseUp}\n                onTouchCancel={this.drawHandlerProvider.onMouseUp}\n                style={style}>\n                <Grid cells={cells}\n                    drawingTool={props.drawingTool}\n                    drawHandler={this.drawHandlerProvider.drawHandlers(this)}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    const drawingTool = state.present.get('drawingTool');\n    const palette = state.present.get('palette');\n    const activeIndex = palette.get('active');\n    const paletteColor = palette.getIn(['grid', activeIndex === -1 ? 0: activeIndex, 'color']);\n    return {\n        grid: canvas.get('grids').get(canvas.get('active')),\n        paletteColor,\n        drawingTool,\n        columns: canvas.get('columns'),\n        rows: canvas.get('rows')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    applyTools: cellProps => dispatch(applyTools(cellProps))\n});\n\nconst CanvasContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Canvas);\n\nexport default CanvasContainer;\n","import React from 'react'\nimport Picker from 'react-color'\nimport { connect } from 'react-redux';\nimport { applyColorPicker, switchTool } from '../redux/actions/action'; \nimport * as tool from '../redux/toolTypes';\n\nclass ColorPicker extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  handleClick = () => {\n    this.setState({ visible: !this.state.visible })\n  };\n\n  handleClose = () => {\n    this.setState({ visible: false })\n  };\n\n  render() {\n    const { color, applyColorPicker, applyPencil } = this.props;\n    this.applyColorPicker = (color) => {\n      color = color.rgb;\n      let colorString = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n      applyColorPicker(colorString);\n      applyPencil();\n    };\n\n    const styles = {\n      picker: {\n        position: 'relative',\n        bottom: '5em',\n        left: '-250px'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n        right: -250,\n        top: 155\n      },\n      cover: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    };\n\n    return (\n      <div className={`color-picker ${this.state.visible ? 'active': ''}`}>\n        <i className='fas fa-paint-brush' onClick={ this.handleClick } />\n          <div style={styles.picker}>\n              { this.state.visible ? \n                  <div style={styles.popover}>\n                    <div\n                      style={styles.cover}\n                      onClick={this.handleClose}\n                    />\n                    <Picker color={ color } onChange={this.applyColorPicker} onClose={this.handleClose} type=\"sketch\"/>\n                </div>\n         : null }\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const palette = state.present.get('palette').toObject();\n  const grid = palette.grid;\n  const active = palette.active;\n  return {\n      color: (active === -1) ? 'rgba(49,49,49,1)' : grid.getIn([active, 'color']),\n      // usingColorPicker: state.present.get('drawingTool') === tool.COLOR_PICKER\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  applyColorPicker: (color) => dispatch(applyColorPicker(color)),\n  applyPencil: () => dispatch(switchTool(tool.PENCIL))\n});\n\nconst ColorPickerContainer = connect(mapStateToProps, mapDispatchToProps)(ColorPicker);\n\nexport default ColorPickerContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst Pencil = ({ usingPencil, switchPencil}) => {\n    return (\n        <div className={`pencil ${usingPencil ? 'active': ''}`}>\n            <i aria-label=\"Pencil Tool\"\n            onClick={switchPencil}\n            className='fas fa-pencil-alt' />\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingPencil: state.present.get('drawingTool') === tool.PENCIL\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchPencil: () => dispatch(switchTool(tool.PENCIL))\n});\n\nconst PencilContainer = connect(mapStateToProps, mapDispatchToProps)(Pencil);\n\nexport default PencilContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst Eraser = ({ usingEraser, switchEraser}) => {\n    return (\n        <div className={`eraser ${usingEraser ? 'active': ''}`}>\n            <i aria-label=\"Eraser Tool\"\n            onClick={switchEraser}\n            className='fas fa-eraser' />\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingEraser: state.present.get('drawingTool') === tool.ERASER\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchEraser: () => dispatch(switchTool(tool.ERASER))\n});\n\nconst EraserContainer = connect(mapStateToProps, mapDispatchToProps)(Eraser);\n\nexport default EraserContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst EyeDropper = ({ usingEyeDropper, switchEyeDropper}) => {\n    return (\n        <div className={`eye-dropper ${usingEyeDropper ? 'active': ''}`}>\n            <i aria-label=\"EyeDropper Tool\"\n            onClick={switchEyeDropper}\n            className=\"eyeDropper fas fa-eye-dropper\" />\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingEyeDropper: state.present.get('drawingTool') === tool.EYE_DROPPER\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchEyeDropper: () => dispatch(switchTool(tool.EYE_DROPPER))\n});\n\nconst EyeDropperContainer = connect(mapStateToProps, mapDispatchToProps)(EyeDropper);\n\nexport default EyeDropperContainer;\n","import React from 'react';\n\nconst CELL_NULL_COLOR = 'rgba(49, 49, 49, 0.5)';\n\nconst PlatteCell = props => {\n    const { width, color, active, selectPaletteColor, id } = props;\n\n    const handleClick = () => selectPaletteColor(id);\n\n    const style = {\n        width: `${width}%`,\n        height: '30px',\n        backgroundColor:  color || CELL_NULL_COLOR\n    };\n\n    return (\n        <button style={style} onClick={handleClick} \n            className={`palette-cell ${active ? 'active' : ''}`}/>\n    );\n};\n\nexport default PlatteCell;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { selectPaletteColor } from '../redux/actions/action';\nimport PaletteCell from './PaletteCell';\n\nclass PaletteGrid extends React.Component { \n\n    render() {\n        const { grid, active, selectPaletteColor } = this.props;\n        const width = 100 / 8;\n        return (\n            <div className='palette-grid'>\n                {grid.map((cell, i) => {\n                    return (\n                        <PaletteCell color={cell.get('color')}\n                          active={active === i}\n                          width={width}\n                          key={cell.get('id')}\n                          id={i}\n                          selectPaletteColor={selectPaletteColor}\n                        />\n                    )\n                })}\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => {\n    const palette = state.present.get('palette').toObject();\n    return {\n        grid: palette.grid,\n        active: palette.active\n    };\n};\n\nconst mapDispatchToProps = dispatch =>   \n  bindActionCreators(\n    {\n      selectPaletteColor\n    },\n    dispatch\n);\n\nconst PaletteGridContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PaletteGrid);\n\nexport default PaletteGridContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as tool from '../redux/toolTypes';\nimport { switchTool } from '../redux/actions/action';\n\nconst PaintBucket = ({ usingPaintBucket, switchPaintBucket}) => {\n    return (\n        <div className={`bucket ${usingPaintBucket ? 'active': ''}`}>\n            <i aria-label=\"Paint Bucket Tool\"\n            className='fas fa-fill-drip'\n            onClick={switchPaintBucket}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    usingPaintBucket: state.present.get('drawingTool') === tool.PAINT_BUCKET\n});\n  \nconst mapDispatchToProps = dispatch => ({\n    switchPaintBucket: () => dispatch(switchTool(tool.PAINT_BUCKET))\n});\n\nconst PaintBucketContainer = connect(mapStateToProps, mapDispatchToProps)(PaintBucket);\n\nexport default PaintBucketContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../redux/actions/action';\n\nconst UndoRedo = props => {\n  const undo = () => {\n    props.actions.undo();\n  };\n\n  const redo = () => {\n    props.actions.redo();\n  };\n\n  return (\n    <div className=\"undo-redo\">\n      <div className='undo-container'>\n        <button className='undo fas fa-undo-alt'\n          onClick={() => {undo()}} />\n      </div>\n      <div className='redo-container'>\n        <button className='redo fas fa-redo-alt'\n          onClick={() => {redo()}} />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nconst UndoRedoContainer = connect(\n  null,\n  mapDispatchToProps\n)(UndoRedo);\nexport default UndoRedoContainer;","import React from 'react';\nimport radium from 'radium';\n\nconst Animation = radium(props => {\n  const pulseKeyframes = radium.keyframes(props.boxShadow, 'pulse');\n  const style = {\n    position: 'absolute',\n    animation: `x ${props.duration}s infinite`,\n    animationName: pulseKeyframes,\n    left: '-5px',\n    top: '-5px'\n  };\n  return <div style={style} />;\n});\n\nexport default Animation;\n","import React from 'react';\nimport { StyleRoot } from 'radium';\nimport {\n  generatePixelDrawCss,\n  generateAnimationCSSData\n} from '../utils/generateCSS';\nimport Animation from './Animation';\n\nconst Preview = props => {\n    const generatePreview = () => {\n        const { duration, storedData, active } = props;\n        const { grids, columns, cellSize, animate } =  storedData || props;\n        const animation = grids.size > 1 && animate;\n        let size =  cellSize || 10;\n        let Duration =  duration || 5;\n        let animationData;\n        let cssString;\n    \n        const styles = {\n          previewWrapper: {\n            height: size,\n            width: size\n          }\n        };\n\n        if (animate) {\n          animationData = generateAnimationCSSData(\n            grids,\n            columns,\n            size\n          )\n        } else {\n          cssString = generatePixelDrawCss(\n            grids.get(active),\n            columns,\n            size,\n            'string'\n          );\n        }\n\n          styles.previewWrapper.boxShadow = cssString;\n          styles.previewWrapper.MozBoxShadow = cssString;\n          styles.previewWrapper.WebkitBoxShadow = cssString;\n    \n        return (\n          <div style={animation ? null : styles.previewWrapper}>\n            {animation ? (\n            <StyleRoot>\n              <Animation duration={Duration} boxShadow={animationData} />\n            </StyleRoot>\n            ) : null}\n          </div>\n        );\n      };\n    \n      const { storedData } = props;\n      const { columns, rows, cellSize } = storedData || props;\n      let size = cellSize || 10;\n      const style = {\n        width: `${columns * size}px`,\n        height: `${rows * size}px`,\n        position: 'relative'\n      };\n    \n      return (\n        <div className=\"preview\" style={style}>\n          {generatePreview()}\n        </div>\n      );\n}\n\nexport default Preview;\n\n","import {\n    getImageData,\n    getImageCssClassOutput,\n    getAnimationKeyframes,\n    getAnimationCssClassOutput\n} from 'box-shadow-pixels';\nimport { List, Map } from 'immutable';\n  \nconst PIXELART_CSS_CLASS_NAME = 'pixel-art-hub';\n\nexport function generatePixelDrawCss(frame, columns, cellSize, type) {\n    return getImageData(frame, {\n        format: type,\n        pSize: cellSize,\n        c: columns\n    });\n}\n  \nexport function getCssImageClassOutput(frame, columns, cellSize) {\n    cellSize = parseInt(cellSize, 10) || 10;\n    return getImageCssClassOutput(frame, {\n        format: 'string',\n        pSize: cellSize,\n        c: columns,\n        cssClassName: PIXELART_CSS_CLASS_NAME\n    });\n}\n  \nexport function exportAnimationData(frames, columns, cellSize, duration) {\n    let newFrames = List();\n    let size = frames.size;\n    cellSize = parseInt(cellSize, 10) || 10;\n    duration = parseInt(duration, 10) || 5;\n    const equalPercentage = 100 / size;\n    frames.forEach((frame, index) => {\n        let interval = (index === size - 1)\n          ? 100\n          : Math.round((index + 1) * equalPercentage * 10) / 10;\n\n        let newFrame = Map({\n            grid: frame,\n            interval\n        });\n        newFrames = newFrames.push(newFrame);\n    })\n    return getAnimationCssClassOutput(newFrames, {\n        pSize: cellSize,\n        c: columns,\n        duration,\n        cssClassName: PIXELART_CSS_CLASS_NAME\n    });\n}\n  \nexport function generateAnimationCSSData(frames, columns, cellSize) {\n    let newFrames = List();\n    let size = frames.size;\n\n    const equalPercentage = 100 / size;\n    frames.forEach((frame, index) => {\n        let interval = (index === size - 1)\n          ? 100\n          : Math.round((index + 1) * equalPercentage * 10) / 10;\n\n        let newFrame = Map({\n            grid: frame,\n            interval\n        });\n        newFrames = newFrames.push(newFrame);\n    })\n    return getAnimationKeyframes(newFrames, {\n        pSize: cellSize,\n        c: columns\n    });\n}","import React from 'react';\nimport { connect } from 'react-redux';\n// import Dropzone from 'react-dropzone'\nimport { importPixelate } from '../redux/actions/action';\nimport { NotificationManager } from 'react-notifications';\n\nclass Upload extends React.Component {\n    state = {\n        column: '16',\n        row: '16'\n    };\n\n    fileUpload = () => {\n        this.props.fileUpload(this.state)\n    }\n\n    fileProcess = (evt) => {\n        console.log(evt.target);\n        this.setState({ file: evt.target.file });\n        console.log(this.state.file)\n    }\n\n    handleChangeCol = (evt) => {\n        this.setState({ column: evt.target.value });\n    }\n\n    handleChangeRow = (evt) => {\n        this.setState({ row: evt.target.value });\n    }\n\n    render() {\n        return (\n            <div className='upload'>\n                {/* <div>Drop</div>\n                <Dropzone onDrop={this.fileProcess} style={style}>\n                {({ getRootProps, getInputProps }) => (\n                    <div\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                    </div>\n                    )}\n                </Dropzone> */}\n                <input type=\"file\" onChange={this.fileProcess}></input>\n                <div>Rows: </div> <input style={{width: '150px'}} type=\"text\" pattern=\"[0-9]*\" onChange={this.handleChangeRow} value={this.state.row}/>\n                <div>Columns: </div> <input style={{width: '150px'}} type=\"text\" pattern=\"[0-9]*\" onChange={this.handleChangeCol} value={this.state.column}/>\n                <button className='upload-button' onClick={this.fileUpload}>Upload</button>\n            </div>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fileUpload: (state) => {\n        const data = new FormData();\n        console.log(state);\n        if(state.file) {\n            NotificationManager.info('Your file is processing...');\n            data.append('file', state.file);\n            // data.append('row', state.row);\n            // data.append('column', state.column);\n            fetch('./api/pixelate', {\n                // headers: {\n                //     'Access-Control-Allow-Origin': true,\n                // },\n                method: 'POST',\n                body: data,\n            }).then(res => {\n                console.log(res.json());\n                return res.json();\n            }).then(data => {\n                dispatch(importPixelate(data))\n                NotificationManager.success('file processed')\n            })\n        } else {\n            NotificationManager.warning(\"No file attached\");\n        }\n    }\n});\n\nconst UploadContainer = connect(null, mapDispatchToProps)(Upload);\n\nexport default UploadContainer;\n","import React from 'react';\nimport { fromJS } from 'immutable';\nimport { NotificationManager } from 'react-notifications';\nimport Preview from './Preview';\nimport {\n  getDataFromStorage,\n  removeProjectFromStorage,\n  exportedStringToProjectData\n} from '../utils/localStorage';\n\nconst browserStorage =\n  typeof localStorage === 'undefined' ? null : localStorage;\n\nexport default class LoadData extends React.Component {\n  importProject() {\n    const importedProject = exportedStringToProjectData(\n      this.importProjectData.value\n    );\n    const { actions, close } = this.props;\n\n    if (importedProject) {\n      const {\n        grids,\n        paletteGridData,\n        columns,\n        rows,\n        cellSize\n      } = importedProject;\n\n      actions.setCanvas(grids, paletteGridData, cellSize, columns, rows);\n      close();\n      NotificationManager.success('Project successfully imported');\n    } else {\n      NotificationManager.error('Sorry, there is some error importing project');\n    }\n  }\n\n  removeFromStorage(key, e) {\n    const { close } = this.props;\n    e.stopPropagation();\n    if (browserStorage) {\n      const removed = removeProjectFromStorage(browserStorage, key);\n      if (removed) {\n        NotificationManager.success('Drawing deleted');\n        close();\n        // open();\n      }\n    }\n  }\n\n  drawingClick(data) {\n    const { actions, close } = this.props;\n    actions.setCanvas(\n      data.grids,\n      data.paletteGridData,\n      data.cellSize,\n      data.columns,\n      data.rows\n    );\n    close();\n    NotificationManager.success('Project successfully imported');\n  }\n\n  getDrawing() {\n    if (browserStorage) {\n      const dataStored = getDataFromStorage(browserStorage);\n      if (dataStored) {\n        if (dataStored.stored.length > 0) {\n          return dataStored.stored.map((data, i) => {\n            const elem = {\n              animate: data.grids.length > 1,\n              cellSize: 5, // Unify cellsize for load preview\n              columns: data.columns,\n              grids: fromJS(data.grids),\n              paletteGridData: fromJS(data.paletteGridData),\n              rows: data.rows,\n              id: i\n            };\n\n            return (\n              <div\n                key={elem.id}\n                onClick={() => {\n                  this.drawingClick(elem);\n                }}\n                onKeyPress={() => {\n                  this.drawingClick(elem);\n                }}\n                className=\"local-data-preview\"\n                tabIndex={0}>\n                <Preview\n                  key={elem.id}\n                  storedData={elem}\n                  active={0}\n                  duration={1}\n                />\n                <div className=\"local-data-delete\"\n                  onClick={event => {\n                    this.removeFromStorage(elem.id, event);\n                  }}>\n                    <i className='fas fa-trash-alt' />\n                  </div>\n              </div>\n            );\n          });\n        }\n      }\n    }\n    return [];\n  }\n\n  getOptions(type) {\n        const drawings = this.getDrawing();\n        \n        const drawingsStored = drawings.length > 0;\n        return (\n          <div className=\"load-drawing\">\n            <h3>Select one of your saved drawings</h3>\n            <div\n              className={`load-drawing__container\n                ${!drawingsStored ? 'empty' : ''}`}\n            >\n              {drawingsStored\n                ? this.getDrawing()\n                : 'Nothing saved yet...'}\n            </div>\n          </div>\n        );\n  }\n\n  render() {\n    const { loadType } = this.props;\n    return this.getOptions(loadType);\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport FileSaver from 'file-saver';\nimport { NotificationManager } from 'react-notifications';\n\nconst Download = props => {\n    const { canvas, type } = props;\n    const downloadIMG = () => {\n        fetch('./api/img', {\n            headers: {\n                'Access-Control-Allow-Origin': true,\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                type,\n                grids: canvas.get('grids'),\n                columns: canvas.get('columns'),\n                rows: canvas.get('rows'),\n                size: canvas.get('size'),\n                duration: canvas.get('duration'),\n                active: canvas.get('active'),\n            }),\n        }).then(res => {\n            return res.blob();\n        }).then(blob => {\n            if (type === 'gif') {\n                FileSaver.saveAs(blob, 'pixel.gif');\n            } else if (type === 'png'){\n                FileSaver.saveAs(blob, 'pixel.png');\n            }\n            NotificationManager.success('File has been downloaded!');\n        })\n        .catch(err => {\n            NotificationManager.error('Sorry, there are some error processing your images');\n        })\n    }\n\n    return (\n        <button className='download' onClick={downloadIMG}>DOWNLOAD</button>\n    );\n};\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    return {\n        canvas\n    };\n};\n\nconst DownloadContainer = connect(\n  mapStateToProps,\n  null\n)(Download);\nexport default DownloadContainer;","import React from 'react';\nimport {\n    exportAnimationData,\n    getCssImageClassOutput\n} from '../utils/generateCSS';\n\nconst DisplayCSS = props => {\n    const { grids,\n        columns,\n        size,\n        active,\n        animate,\n        duration } = props;\n\n    const generateCSS = () => {\n        if (animate) {\n            const cssAnimationString = exportAnimationData(\n                grids,\n                columns,\n                size,\n                duration\n            );\n            return cssAnimationString;\n        } else {\n            return getCssImageClassOutput(\n                grids.get(active),\n                columns,\n                size\n              );\n        }\n    }\n\n    return (\n        <div className=\"display-css\">\n        {animate ? (\n            <h4>\n            Paste the following code anywhere in the CSS code and assign\n            <b> .pixel-art-hub </b>\n            class to a HTML element\n            </h4>\n        ) : (\n            <h4>\n            Paste the following code anywhere in the CSS code and assign\n            <b> .pixel-art-hub </b>\n            class to a HTML element\n            </h4>\n        )}\n        <textarea className='css-textarea' readOnly={true} value={generateCSS()}></textarea>\n        </div>\n    );\n};\n\nexport default DisplayCSS;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Modal from 'react-awesome-modal';\nimport Select from 'react-dropdown-select';\nimport Preview from './Preview';\nimport Upload from './Upload';\nimport LocalData from './LocalData';\nimport Download from './Download';\nimport DisplayCSS from './DisplayCSS';\nimport * as actions from '../redux/actions/action';\n\nclass Popup extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            type: []\n        };\n        this.closeModal = () => {\n            props.close();\n        };\n        this.openModal = () => {\n            this.props.visible = true\n        };\n    }\n\n    changeType = (value) => {\n        this.setState({type: value[0].value});\n    }\n\n    getImportContent = (importType) => {\n        const { actions } = this.props;\n        switch(importType) {\n            case 'upload image':\n                return <Upload />;\n            case 'local data':\n                return (<LocalData actions={actions} close={this.closeModal} open={this.openModal}\n                   />);\n            default:\n                return (<LocalData actions={actions} close={this.closeModal} open={this.openModal}\n                    />);\n        }\n    }\n\n    getExportContent = (exportType) => {\n        let content, gifPreview;\n        const { grids, columns, rows, active, cellSize, duration } = this.props;\n        const style = {textAlign: 'center'};\n        switch(exportType) {\n            case 'download files':\n                gifPreview = (\n                    <div className='preview-animation'>\n                        <div style={style}>Animation</div>\n                        <Preview\n                            key=\"0\"\n                            grids={grids}\n                            columns={columns}\n                            rows={rows}\n                            cellSize={10}\n                            duration={5}\n                            active={active}\n                            animate={true}\n                        />\n                        <Download type={'gif'}/>\n                    </div>\n                );\n                content = (\n                    <div className='preview-content'>\n                        <div className={`preview-frame ${grids.size > 1 ? '' : 'only'}`}>\n                            <div style={style}>Current Frame</div>\n                            <Preview\n                                key=\"0\"\n                                grids={grids}\n                                columns={columns}\n                                rows={rows}\n                                cellSize={10}\n                                duration={5}\n                                active={active}\n                                animate={false}\n                            />\n                            <Download className='download-button' type={'png'}/>\n                        </div>\n                        {grids.size > 1 ? gifPreview : ''}\n                    </div>\n                );\n                return content;\n            case 'get css data (current frame)':\n                return (\n                    <DisplayCSS \n                        grids={grids}\n                        columns={columns}\n                        rows={rows}\n                        size={cellSize}\n                        duration={duration}\n                        active={active}\n                        animate={false}\n                    />\n                );\n            case 'get css data (animation)':\n                return (\n                    <DisplayCSS \n                    grids={grids}\n                    columns={columns}\n                    rows={rows}\n                    size={cellSize}\n                    duration={duration}\n                    active={active}\n                    animate={true}\n                />\n                );\n            default: \n                gifPreview = (\n                    <div className='preview-animation'>\n                        <div style={style}>Animation</div>\n                        <Preview\n                            key=\"0\"\n                            grids={grids}\n                            columns={columns}\n                            rows={rows}\n                            cellSize={cellSize}\n                            duration={duration}\n                            active={active}\n                            animate={true}\n                        />\n                        <Download type={'gif'}/>\n                    </div>\n                );\n                content = (\n                    <div className='preview-content'>\n                        <div className={`preview-frame ${grids.size > 1 ? '' : 'only'}`}>\n                            <div style={style}>Current Frame</div>\n                            <Preview\n                                key=\"0\"\n                                grids={grids}\n                                columns={columns}\n                                rows={rows}\n                                cellSize={cellSize}\n                                duration={duration}\n                                active={active}\n                                animate={false}\n                            />\n                            <Download className='download-button' type={'png'}/>\n                        </div>\n                        {grids.size > 1 ? gifPreview : ''}\n                    </div>\n                );\n                return content;\n        }\n    }\n\n    getPreviewContent = () => {\n        const { grids, columns, rows, duration, active } = this.props;\n        const style = {textAlign: 'center'};\n        let gifPreview = (\n            <div className='preview-animation'>\n                <div style={style}>Animation</div>\n                <Preview\n                    key=\"0\"\n                    grids={grids}\n                    columns={columns}\n                    rows={rows}\n                    cellSize={10}\n                    duration={duration}\n                    active={active}\n                    animate={true}\n                />\n            </div>\n        );\n        let content = (\n            <div className='preview-content'>\n                <div className={`preview-frame ${grids.size > 1 ? '' : 'only'}`}>\n                    <div style={style}>Current Frame</div>\n                    <Preview\n                        key=\"0\"\n                        grids={grids}\n                        columns={columns}\n                        rows={rows}\n                        cellSize={10}\n                        active={active}\n                        animate={false}\n                    />\n                </div>\n                {grids.size > 1 ? gifPreview : ''}\n            </div>\n        );\n        return content;\n    }\n\n    getModalContent = (popUpType) => {\n        let content, options;\n        switch (popUpType) {\n            case 'import':\n                options = [{\n                    value: 'local data',\n                }, { value: 'upload image' }]\n                content = (\n                    <div className='popup'>\n                        <button className='popup-close' onClick={() => this.props.close()}>x</button>\n                        <div className='popup-header'>Import</div>\n                        <div className='dropdown-select'>\n                            <Select options={options} values={[{value: 'local data'}]}\n                                onChange={this.changeType}\n                                labelField='value' searchable={false}/>\n                        </div>\n                        {this.getImportContent(this.state.type)}\n                    </div>);\n                break;\n            case 'export':\n                options = [{\n                    value: 'download files',\n                }, { \n                    value: 'get css data (current frame)'\n                }, { value: 'get css data (animation)' } ]\n                content = (\n                    <div className='popup'>\n                        <button className='popup-close' onClick={() => this.props.close()}>x</button>\n                        <div className='popup-header'>Export</div>\n                        <div className='dropdown-select'>\n                            <Select options={options} values={[{value: 'download images'}]}\n                                onChange={this.changeType}\n                                labelField='value' searchable={false}/>\n                        </div>\n                        {this.getExportContent(this.state.type)}\n                    </div>\n                );\n                break;\n            case 'preview':\n                content = (\n                    <div className='popup'>\n                        <button className='popup-close' onClick={() => this.props.close()}>x</button>\n                        <div className='popup-header'>Preivew</div>\n                        {this.getPreviewContent()}\n                    </div>\n                );\n                break;\n            default:\n        }\n        return content;\n    }\n\n    render() {\n        const { visible, popUpType } = this.props;\n        return (\n            <Modal visible={visible}\n                width=\"80%\"\n                height=\"80%\"\n                effect=\"fadeInUp\"\n                onClickAway={() => this.props.close()}>\n                {this.getModalContent(popUpType)}\n            </Modal>\n        );\n    }\n}\n  \nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    const active = canvas.get('active');\n    return {\n      grids: canvas.get('grids'),\n      active,\n      activeGrid: canvas.getIn(['grids', active]),\n      paletteGridData: state.present.getIn(['palette', 'grid']),\n      columns: canvas.get('columns'),\n      rows: canvas.get('rows'),\n      cellSize: state.present.get('size'),\n      duration: state.present.get('duration')\n    };\n  };\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\nconst PopupContainer = connect(mapStateToProps, mapDispatchToProps)(Popup);\n\nexport default PopupContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { newProject } from '../redux/actions/action';\n\nconst NewProject = ({ newProject }) => {\n    return (\n        <button\n            type=\"button\"\n            className='newProject'\n            onClick={newProject}>\n            NEW PROJECT\n        </button>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    newProject: () => dispatch(newProject())\n});\n  \nconst NewProjectContainer = connect(\n    null,\n    mapDispatchToProps\n)(NewProject);\n\nexport default NewProjectContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clear } from '../redux/actions/action';\n\nconst Clear = ({ clear }) => {\n    return (\n        <button\n            type=\"button\"\n            className='clear'\n            onClick={clear}>\n            CLEAR\n        </button>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    clear: () => dispatch(clear())\n});\n  \nconst ClearContainer = connect(\n    null,\n    mapDispatchToProps\n)(Clear);\n\nexport default ClearContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { saveProjectToStorage } from '../utils/localStorage';\nimport { NotificationManager } from 'react-notifications';\n\nconst Save = props => {\n    const save = () => {\n        const drawingToSave = {\n            grids: props.grids,\n            paletteGridData: props.paletteGridData,\n            cellSize: props.cellSize,\n            columns: props.columns,\n            rows: props.rows,\n            animate: props.grids.size > 1,\n        };\n        saveProjectToStorage(localStorage, drawingToSave);\n        NotificationManager.success('Saved to local storage successfully!');\n    }\n    return (\n        <button className='save'\n            type=\"button\"\n            onClick={save}>\n            SAVE\n        </button>\n    );\n};\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    return {\n      grids: canvas.get('grids'),\n      columns: canvas.get('columns'),\n      rows: canvas.get('rows'),\n      cellSize: state.present.get('cellSize'),\n      paletteGridData: state.present.getIn(['palette', 'grid'])\n    };\n  };\n\nconst mapDispatchToProps = dispatch => ({\n    \n});\n  \nconst SaveContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Save);\n\nexport default SaveContainer;","import React from 'react';\nimport { List } from 'immutable';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Preview from './Preview';\n\nclass Frame extends React.Component {\n    render() {\n        const {grid, columns, rows, actions, id, active, size } = this.props;\n        const switchFrame = () => {\n            actions.switchFrame(id);\n        };\n    \n        const addDuplicate = () => {\n            actions.addDuplicatedFrame(id);\n        }\n    \n        const deleteFrame = () => {\n            actions.deleteFrame(id);\n        }\n        return (\n            <Draggable key={id} draggableId={id.toString()} index={id}>\n                {provided => (\n                    <div onClick={switchFrame}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    className={`frame ${active === id ? 'active': ''}`}>\n                        <Preview\n                            key={id}\n                            grids={List([grid])}\n                            columns={columns}\n                            rows={rows}\n                            cellSize={3}\n                            active={0}\n                        />\n                        <div className=\"frame-tools\">\n                            <i role=\"button\" onClick={addDuplicate} className='frame-add-icon fas fa-copy' />\n                            <i className='frame-add-icon2 fas fa-copy' />\n                            <i role=\"button\" onClick={size !== (id + 1) ? deleteFrame: undefined} className={`frame-delete-icon fas fa-trash-alt ${size === (id + 1) ? 'disabled': ''}`}/>\n                        </div>\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n};\n\nexport default Frame;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd';\nimport * as actions from '../redux/actions/action';\nimport Frame from './Frame';\n\nclass FrameList extends React.Component {\n    onDragEnd = result => {\n      const { destination, source } = result;\n      const { actions } = this.props;\n\n      if (!destination) {\n        return;\n      }\n\n      if (\n        destination.droppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return;\n      }\n\n      actions.reorderFrame(source.index, destination.index);\n    }\n\n    getFrames() {\n        const { grids, columns, rows, active, actions } = this.props;\n        return grids.map((grid, index) => (\n          <Frame\n            key={index}\n            id={index}\n            grid={grid}\n            columns={columns}\n            rows={rows}\n            active={active}\n            size={grids.size}\n            actions={{\n              switchFrame: actions.switchFrame,\n              deleteFrame: actions.deleteFrame,\n              addDuplicatedFrame: actions.addDuplicatedFrame, \n            }}\n          />\n        ));\n    }\n\n    addNewFrame = () => {\n      const { actions } = this.props;\n      actions.addNewFrame()\n    }\n\n    render() {\n      const style = {\n        frameList: {\n          display: 'flex', flexDirection: 'column', marginLeft: '10px', marginBottom: '36px'\n        },\n        frameListContent: {\n          backgroundColor: 'rgba(50, 50, 50, 0.3)',\n          width: '140px',\n          display: 'flex',\n          flex: '1',\n          minHeight: '0',\n          overflow: 'scroll'\n        }\n      };\n        return (\n          <div style={style.frameList}>\n            <button type='button' className='frames-list-add' onClick={() => this.addNewFrame()}><div>+</div></button>\n            <div style={style.frameListContent}>\n              <DragDropContext onDragEnd = {this.onDragEnd} className='framesHandlerContext'>\n                <Droppable droppableId=\"droppable\" direction=\"vertical\" className='frames-handler'>\n                {provided => (\n                  <div ref={provided.innerRef}\n                  {...provided.droppableProps}>\n                  {this.getFrames()}\n                  {provided.placeholder}\n                  </div>\n                )}\n                </Droppable>\n              </DragDropContext>\n            </div>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => state.present.get('canvas').toObject();\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nconst FrameListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FrameList);\nexport default FrameListContainer;","import React from 'react';\n\nconst Editor = ({ value, action }) => {\n  return (\n    <div className='editor_container'>\n        <div className=''>{value}</div>\n        <div className=\"editor_buttons\">\n          <button\n            onClick={() => action(1)}\n            className=\"editor_button\"\n          >\n            +\n          </button>\n          <button\n            onClick={() => action(-1)}\n            className=\"editor_button\"\n          >\n            -\n          </button>\n        </div>\n    </div>\n  );\n};\n\nexport default Editor;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeHeight, changeWidth } from '../redux/actions/action';\nimport Editor from './Editor';\n\nconst ChangeDimension = props => {\n  const { changeHeight, changeWidth, rows, columns } = props;\n  \n  const updateHeight = (i) => {\n    setTimeout(() => changeHeight(rows + i), 100);\n  };\n  const updateWidth = (i) => {\n    setTimeout(() => changeWidth(columns + i), 100) \n  };\n\n  return (\n    <div className='change-dimension'>\n      <div className=\"rows\">\n        <label> \n          ROWS: <Editor value={rows} action={updateHeight}/>\n        </label>\n      </div>\n      <div className=\"\">\n        <label> COLUMN: <Editor value={columns} action={updateWidth}/>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    return {\n        columns: canvas.get('columns'),\n        rows: canvas.get('rows'),\n        duration: canvas.get('duration'),\n        size: canvas.get('size')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeWidth: (newColumns) => dispatch(changeWidth(newColumns)),\n  changeHeight: (newRows) => dispatch(changeHeight(newRows))\n});\n\nconst ChangeDimensionContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangeDimension);\nexport default ChangeDimensionContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeDuration } from '../redux/actions/action';\nimport Editor from './Editor';\n\nconst Duration = props => {\n  const { changeDuration, duration } = props;\n\n  const updateDuration = (i) => {\n    changeDuration(duration + i);\n  };\n\n  return (\n      <div className=\"duration\">\n        <label> DURATION\n          <Editor value={duration} action={updateDuration}/>\n        </label>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    return {\n        columns: canvas.get('columns'),\n        rows: canvas.get('rows'),\n        duration: canvas.get('duration'),\n        size: canvas.get('size')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeDuration: (duration) => dispatch(changeDuration(duration))\n});\n\nconst DurationContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Duration);\nexport default DurationContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCellSize } from '../redux/actions/action';\nimport Editor from './Editor';\n\nconst CellSize = props => {\n  const { changeCellSize, size } = props;\n  const updateCellSize = (i) => {\n    changeCellSize(size + i);\n  };\n\n  return (\n      <div className=\"cell-size\">\n        <label> Cell Size\n          <Editor value={size} action={updateCellSize}/>\n        </label>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => {\n    const canvas = state.present.get('canvas');\n    return {\n        columns: canvas.get('columns'),\n        rows: canvas.get('rows'),\n        duration: canvas.get('duration'),\n        size: canvas.get('size')\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeCellSize: (size) => dispatch(changeCellSize(size))\n});\n\nconst CellSizeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CellSize);\nexport default CellSizeContainer;","import React from 'react';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer} from 'react-notifications';\nimport './css/imports.css';\nimport init from './utils/startup';\nimport HeaderContainer from './components/Header';\nimport CanvasContainer from './components/Canvas';\nimport ColorPickerContainer from './components/ColorPicker';\nimport PencilContainer from './components/Pencil';\nimport EraserContainer from './components/Eraser';\nimport EyeDropperContainer from './components/EyeDropper';\nimport PaletteGridContainer from './components/PaletteGrid';\nimport PaintBucketContainer from './components/PaintBucket';\nimport UndoRedoContainer from './components/UndoRedo';\nimport PopupContainer from './components/Popup';\nimport NewProjectContainer from './components/NewProject';\nimport ClearContainer from './components/Clear';\nimport SaveContainer from './components/Save';\nimport FrameListContainer from './components/FrameList';\nimport ChangeDimensionContainer from './components/ChangeDimension';\nimport DurantionContainer from './components/Duration';\nimport CellSizeContainer from './components/CellSize';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      popUpType: null,\n      popUpShown: false\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    init(dispatch, localStorage);\n  }\n\n  setPopUp(type) {\n    this.setState({\n      popUpShown: true,\n      popUpType: type,\n    });\n  }\n\n  closePopUp() {\n    this.setState({\n      popUpShown: false,\n      popUpType: null,\n    });\n  }\n\n  render() {\n    const { popUpShown, popUpType } = this.state;\n    return (\n      <div className='background'>\n        <NotificationContainer/>\n        <div className='app'>\n        <HeaderContainer/>\n        <div className='tool-bar'>\n            <NewProjectContainer/>\n            <ClearContainer />\n            <SaveContainer />\n            <button className='import' onClick={() => this.setPopUp('import')}>IMPORT</button>\n            <button className='import' onClick={() => this.setPopUp('export')}>EXPORT</button>\n            <button className='import' onClick={() => this.setPopUp('preview')}>PREVIEW</button>\n        </div>\n        <div className='app-content'>\n          <div className='side-bar col-lg-2'>\n            <FrameListContainer/>\n          </div>\n          <div className='canvas-container col-lg-6'>\n            <CanvasContainer/>\n          </div>\n          <div className='tools col-lg-4'>\n            <div className='col-12'>\n              <UndoRedoContainer />\n              <ChangeDimensionContainer />\n              <DurantionContainer />\n              <CellSizeContainer />\n              <div className='draw-tools'> \n                <PencilContainer />\n                <EraserContainer />\n                <PaintBucketContainer />\n                <EyeDropperContainer/>\n                <ColorPickerContainer />\n              </div>\n              <PaletteGridContainer />\n            </div>\n          </div>\n        </div>\n        <PopupContainer visible={popUpShown} popUpType={popUpType} close={() => this.closePopUp()}/>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import{ List, Map, fromJS } from 'immutable';\nimport * as type from '../actions/actionTypes';\n\nconst initCanvas = (action = {})  => {\n  const options = action.options || {};\n  const columns = parseInt(options.columns, 10) || 16;\n  const rows = parseInt(options.rows, 10) || 16;\n  const size = parseInt(options.size, 10) || 10;\n  const duration = parseInt(options.duration, 10) || 5;\n\n  let grid = List();\n  for(let i = 0; i < rows * columns; i++) {\n    grid = grid.push('');\n  }\n  let grids = List();\n  grids = grids.push(grid);\n\n  return Map({\n    name: 'name',\n    grids,\n    active: 0,\n    columns,\n    rows,\n    size,\n    duration\n  })\n}\n\nconst setCanvas = (canvas, action) => {\n  const { grids, columns, rows, cellSize, duration } = action;\n  console.log(grids);\n  return fromJS({\n    grids,\n    columns,\n    rows,\n    size: cellSize,\n    duration: duration || 5,\n    active: 0\n  });\n};\n\nconst importPixelate = (action) => {\n  const columns = action.columns;\n  const rows = action.rows;\n  // const options = action.options;\n  const grids = List(action.grids);\n  // const size = parseInt(action.size, 10) || 10;\n  // const duration = parseInt(action.duration, 10) || 5;\n\n  return Map({\n    grids,\n    active: 0,\n    columns,\n    rows,\n    // size,\n    // duration\n  })\n}\n\nconst changeName = (canvas, action) => {\n  return canvas.merge({\n    name: action.name\n  })\n}\n\nconst changeWidthForOne = (grid, newColumns, columns, rows) => {\n  let newGrid = grid;\n  let dCol = newColumns - columns;\n  if (dCol > 0) {\n    for (let i = columns * rows; i > 0; i -= columns) {\n      for (let j = 0; j < dCol; j++) {\n        newGrid = newGrid.insert(i, '');\n      }\n    }\n  } else if (dCol < 0) {\n    for (let i = columns * rows; i > 0; i -= columns) {\n      newGrid = newGrid.splice(i + dCol, -dCol);\n    }\n  }\n  return newGrid;\n}\n\nconst changeHeightForOne = (grid, newRows, columns, rows) => {\n  let dRow = newRows - rows;\n  let newGrid = grid;\n  if (dRow > 0) {\n    for (let i = 0; i < columns; i++) {\n      for (let j = 0; j < dRow; j++) {\n        newGrid = newGrid.push('');\n      }\n    }\n  } else if (dRow < 0) {\n    for (let i = 0; i < columns; i++) {\n      for (let j = dRow; j < 0; j++) {\n        newGrid = newGrid.splice(-1, 1);\n      }\n    }\n  }\n  return newGrid;\n}\n\nconst changeWidth = (canvas, action) => {\n  const columns = canvas.get('columns');\n  const rows = canvas.get('rows');\n  const { newColumns } = action;\n  let newGrids = List();\n  const grids = canvas.get('grids');\n\n  grids.forEach(grid => {\n    newGrids = newGrids.push(changeWidthForOne(grid, newColumns, columns, rows))\n  });\n  \n  return canvas.merge({\n    grids: newGrids,\n    columns: newColumns,\n  });\n};\n\nconst changeHeight = (canvas, action) => {\n  const rows = canvas.get('rows');\n  const columns = canvas.get('columns');\n  const { newRows } = action;\n  let newGrids = List();\n  const grids = canvas.get('grids');\n\n  grids.forEach(grid => {\n    newGrids = newGrids.push(changeHeightForOne(grid, newRows, columns, rows))\n  });\n  \n  return canvas.merge({\n    grids: newGrids,\n    rows: newRows\n  });\n};\n\nconst changeDuration = (canvas, action) => {\n  const duration = action.duration;\n  return canvas.merge({\n    duration\n  }); \n}\n\nconst changeCellSize = (canvas, action) => {\n  const size = action.size;\n  return canvas.merge({\n    size\n  }); \n}\n\nconst addNewFrame = (canvas, action) => {\n  const grids = canvas.get('grids');\n  const columns = canvas.get('columns');\n  const rows = canvas.get('rows');\n  let grid = List();\n  for(let i = 0; i < rows * columns; i++) {\n    grid = grid.push('');\n  }\n  const newGrids = grids.insert(grids.size, grid);\n  return canvas.merge({\n    grids: newGrids,\n    active: grids.size\n  }); \n};\n\nconst addDuplicatedFrame = (canvas, action) => {\n  const grids = canvas.get('grids');\n  const grid = grids.get(action.id);\n  const newGrids = grids.insert(action.id, grid);\n  return canvas.merge({\n    grids: newGrids,\n    active: action.id + 1\n  }); \n};\n\nconst deleteFrame = (canvas, action) => {\n  const grids = canvas.get('grids');\n  const newGrids = grids.remove(action.id);\n  return canvas.merge({\n    grids: newGrids,\n    active: action.id\n  }); \n};\n\nconst switchFrame = (canvas, action) => {\n  return canvas.merge({\n    active: action.id\n  }); \n}\n\nconst reorderFrame = (canvas, action) => {\n  let grids = canvas.get('grids');\n  const { initIndex, finalIndex } = action;\n  const moveForward = initIndex < finalIndex;\n  const insertPos = finalIndex + (moveForward ? 1 : 0);\n  const deletePos = initIndex + (moveForward ? 0 : 1);\n  const grid = grids.get(initIndex);\n  grids = grids.splice(insertPos, 0, grid)\n            .splice(deletePos, 1);\n\n  return canvas.merge({\n    grids,\n    active: finalIndex\n  });\n};\n\nexport default function(canvas = initCanvas(), action) {\n    switch (action.type) {\n      case type.SET_INIT_STATE:\n      case type.NEW_PROJECT:\n        return initCanvas(action);\n      case type.SET_CANVAS:\n        return setCanvas(canvas, action);\n      case type.CHANGE_NAME:\n        return changeName(canvas,action);\n      case type.CHANGE_HEIGHT:\n        return changeHeight(canvas, action);\n      case type.CHANGE_WIDTH:\n        return changeWidth(canvas, action);\n      case type.CHANGE_DURATION:\n        return changeDuration(canvas, action);\n      case type.CHANGE_CELL_SIZE:\n        return changeCellSize(canvas, action);\n      case type.IMPORT_PIXELATE:\n        return importPixelate(action);\n      case type.ADD_NEW_FRAME:\n        return addNewFrame(canvas);\n      case type.ADD_DUPLICATED_FRAME:\n        return addDuplicatedFrame(canvas, action);\n      case type.DELETE_FRAME:\n        return deleteFrame(canvas, action);\n      case type.SWITCH_FRAME:\n        return switchFrame(canvas, action);\n      case type.REORDER_FRAMES:\n        return reorderFrame(canvas, action);\n      default:\n        return canvas;\n    }\n  }","//import{List, Map} from 'immutable';\nimport * as type from '../actions/actionTypes';\nimport { List } from 'immutable';\n\nconst GRID_INIT_COLOR = 'rgba(49, 49, 49, 1)';\n\nconst clear = (canvas, action) => {\n  const active = canvas.get('active');\n  const columns = canvas.get('columns');\n  const rows = canvas.get('rows');\n  let grid = List();\n  for(let i = 0; i < rows * columns; i++) {\n    grid = grid.push('');\n  }\n  const newCanvas = canvas.setIn(['grids', active], grid);\n  return newCanvas;\n}\n\nconst drawPixel = (grid, color, id) => {\n  return grid.set(id, color);\n}\n\nconst applyPencilToGrid = (grid, {paletteColor, id}) => {\n  const newGrid = drawPixel(grid, paletteColor, id);\n  return newGrid;\n}\n\nconst applyPencil = (canvas, action) => {\n  const active = canvas.get('active');\n  const grid = canvas.get('grids').get(active);\n  const newGrid = applyPencilToGrid(grid, action);\n  const newCanvas = canvas.setIn(['grids', active], newGrid);\n  return newCanvas;\n};\n\nconst applyEraser = (canvas, action) => {\n  const active = canvas.get('active');\n  const grid = canvas.get('grids').get(active);\n  const newGrid = drawPixel(grid, '', action.id);\n  const newCanvas = canvas.setIn(['grids', active], newGrid);\n  return newCanvas;\n}\n\nconst isSameColor = (colorA, colorB) =>\n  (colorA || GRID_INIT_COLOR) === (colorB || GRID_INIT_COLOR);\n\nconst getSameColorAdjCells = (grid, color, id, columns, rows) => {\n  const sameColorAdjCells = [];\n\n  // test upper cell\n  if (id >= columns) {\n    if (isSameColor(grid.get(id - columns), color)) {\n      sameColorAdjCells.push(id - columns);\n    }\n  }\n\n  // test bottom cell\n  if (id < (columns - 1) * rows) {\n    if (isSameColor(grid.get(id + columns), color)) {\n      sameColorAdjCells.push(id + columns);\n    }\n  }\n\n  // test left cell\n  if(id % columns !== 0) {\n    if (isSameColor(grid.get(id - 1), color)) {\n      sameColorAdjCells.push(id - 1);\n    }\n  }\n  \n  //test right cell\n  if (id % columns !== (columns - 1)) {\n    if (isSameColor(grid.get(id + 1), color)) {\n      sameColorAdjCells.push(id + 1);\n    }\n  }\n  return sameColorAdjCells;\n};\n\nconst applyPaintBucketToGrid = (grid, { id, paletteColor, columns, rows }) => {\n  const originalColor = grid.get(id);\n  const cellQueue = [id];\n  let newGrid = grid;\n  let currentId;\n  let adjCells;\n\n  while (cellQueue.length > 0) {\n    currentId = cellQueue.shift();\n    newGrid = drawPixel(newGrid, paletteColor, currentId);\n    adjCells = getSameColorAdjCells(newGrid, originalColor, currentId, columns, rows);\n\n    for(let i = 0; i < adjCells.length; i++) {\n        let adjId = adjCells[i];\n        let adjColor = newGrid.get(adjId);\n        if (cellQueue.indexOf(adjId) === -1 && adjColor !== paletteColor) {\n          cellQueue.push(adjId);\n        }\n    }\n  }\n  return newGrid;\n};\n\nconst applyPaintBucket = (canvas, action) => {\n  const active = canvas.get('active');\n  const grid = canvas.get('grids').get(active);\n  const newGrid = applyPaintBucketToGrid(grid, action);\n  const newCanvas = canvas.setIn(['grids', active], newGrid);\n  return newCanvas;\n}\n\nexport default function(canvas, action) {\n    switch (action.type) {\n        case type.CLEAR:\n            return clear(canvas, action);\n        case type.APPLY_PENCIL:\n            return applyPencil(canvas, action);\n        case type.APPLY_ERASER:\n            return applyEraser(canvas, action);\n        case type.APPLY_PAINT_BUCKET:\n            return applyPaintBucket(canvas, action);\n        default:\n            return canvas;\n    }\n}","import * as type from '../actions/actionTypes';\nimport * as tool from '../toolTypes';\n\nconst switchTool = (drawingTool = tool.PENCIL, action) => {\n    if (drawingTool === action.drawingTool) {\n        return tool.PENCIL;\n    } else {\n        return action.drawingTool;\n    }\n}\n\nexport default function drawingToolReducer(drawingTool = tool.PENCIL, action) {\n    switch (action.type) {\n        case type.SET_INIT_STATE:\n            return tool.PENCIL;\n        case type.SWITCH_TOOL:\n            return switchTool(drawingTool, action);\n        case type.APPLY_EYE_DROPPER:\n            return tool.PENCIL;\n        case type.APPLY_PENCIL:\n            return tool.PENCIL;\n        case type.SELECT_PALETTE_COLOR:\n            return drawingTool;\n        default:\n            return drawingTool;\n    }\n};","import * as type from '../actions/actionTypes';\nimport * as tool from '../toolTypes';\nimport { List, Map, fromJS } from 'immutable';\n\nconst initPaletteGrid = () => {\n    return List([\n        'rgb(0,0,0)',\n        'rgb(255,0,0)',\n        'rgb(255,51,0)',\n        'rgb(255,153,0)',\n        'rgb(255,255,0)',\n        'rgb(153,255,0)',\n        'rgb(0,255,0)',\n        'rgb(0,255,255)',\n        'rgb(0,0,255)',\n        'rgb(102,0,255)',\n        'rgb(255,0,255)',\n        'rgb(192,192,192)',\n        'rgb(255,255,255)',\n        '',''\n    ]).map((color, i) => Map({ color, id: i}));\n};\n\nconst initPalette = () => {\n    return Map({\n        grid: initPaletteGrid(),\n        active: 0\n    });\n};\n\nconst setPalette = (palette, action) => {\n    const { paletteGrid } = action;\n    return fromJS({\n        grid: paletteGrid,\n        active: 0\n    });\n};\n\nconst selectPaletteColor = (palette, action) => {\n    return palette.set('active', action.id);\n};\n\nconst disablePaletteColor = (palette, action) => {\n    if ( action.drawingTool === tool.ERASER ) {\n        return palette.set('active', -1);\n    }\n    return palette;\n};\n\nconst searchForColor = (grid, color) => {\n    for (let i = 0; i < grid.size - 1; i++) {\n        if (grid.getIn([i, 'color']) === color) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nconst applyEyeDropper = (palette, action) => {\n    const color = action.color;\n    const grid = palette.get('grid');\n    const index = searchForColor(grid, color);\n    if (index !== -1) {\n        return palette.set('active', index);\n    }\n    const location = grid.size - 1;\n    return palette.merge({\n        grid: grid.setIn([location, 'color'], color),\n        active: location\n    });\n};\n\nconst applyColorPicker = (palette, action) => {\n    const color = action.color;\n    const grid = palette.get('grid');\n    const active = palette.get('active');\n    if (active === -1) {\n        return palette.merge({\n            grid: grid.setIn([active, 'color'], color),\n            active: grid.size - 1\n        });\n    } else {\n        return palette.merge({\n            grid: grid.setIn([active, 'color'], color),\n            active: active\n        });\n    }\n};\n\nexport default function (palette = initPalette(), action) {\n    switch (action.type) {\n        case type.SET_INIT_STATE:\n        case type.NEW_PROJECT:\n            return initPalette();\n        case type.SET_CANVAS:\n            return setPalette(palette, action);\n        case type.SELECT_PALETTE_COLOR:\n            return selectPaletteColor(palette, action);\n        case type.APPLY_EYE_DROPPER:\n            return applyEyeDropper(palette, action);\n        case type.SWITCH_TOOL:\n            return disablePaletteColor(palette, action);\n        case type.APPLY_COLOR_PICKER:\n            return applyColorPicker(palette, action);\n        default:\n            return palette;\n    }     \n}","import { Map } from 'immutable';\nimport canvasReducer from './canvasReducer';\nimport selectedCanvasReducer from './selectedCanvasReducer';\nimport drawingToolReducer from './drawingToolReducer';\nimport paletteReducer from './paletteReducer';\nimport * as type from '../actions/actionTypes';\n\nfunction setInitialState(state) {\n  const cellSize = 10;\n\n  const initialState = {\n    cellSize,\n  };\n\n  return state.merge(initialState);\n}\n\nfunction generateDefaultState() {\n  return setInitialState(Map(), { type: type.SET_INIT_STATE, state: {} });\n}\n\nconst pipeReducers = reducers => (initialState, action) =>\n  reducers.reduce((state, reducer) => reducer(state, action), initialState);\n\nfunction partialReducer(state, action) {\n  switch (action.type) {\n    case type.SET_INIT_STATE:\n      return setInitialState(state);\n    default:\n      return state;\n  }\n}\n\nexport default function(state = generateDefaultState(), action) {\n  return partialReducer(state, action).merge({\n    canvas: pipeReducers([canvasReducer, selectedCanvasReducer])\n      (state.get('canvas'),\n      action),\n    drawingTool: drawingToolReducer(state.get('drawingTool'), action),\n    palette: paletteReducer(state.get('palette'), action)\n  });\n}\n","import { createStore } from \"redux\";\nimport undoable, { includeAction } from 'redux-undo';\nimport reducer from \"./reducers/reducer\";\nimport {\n    APPLY_ERASER,\n    APPLY_EYE_DROPPER,\n    APPLY_PAINT_BUCKET,\n    APPLY_PENCIL,\n    CLEAR\n} from './actions/actionTypes';\n\nconst createIncludedActions = () =>\n  includeAction([\n    APPLY_ERASER,\n    APPLY_EYE_DROPPER,\n    APPLY_PAINT_BUCKET,\n    APPLY_PENCIL,\n    CLEAR\n  ]);\n\nlet store = createStore(undoable(reducer, {\n    filter: createIncludedActions(),\n    debug: true\n    })\n);\n\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/imports.css';\nimport './index.css'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\nimport * as serviceWorker from './serviceWorker';\n\n// as shown in react-redux document to make the Redux store available\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App dispatch={store.dispatch}/>\n  </Provider>,\n  rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}